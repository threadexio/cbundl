[package]
name = "cbundl"
version = "0.1.2"
authors = ["threadexio"]
edition = "2021"
description = "webpack but for C code."
readme = "README.md"
homepage = "https://github.com/threadexio/cbundl"
repository = "https://github.com/threadexio/cbundl"
license = "Apache-2.0"
keywords = ["bundle", "c", "bundler", "code", "parser"]
categories = ["command-line-utilities", "development-tools::build-utils"]

[dependencies]
chrono = { version = "0.4" }
clap = { version = "4.5", features = ["derive"] }
color-eyre = { version = "0.6" }
const_format = { version = "0.2" }
env_logger = { version = "0.11" }
eyre = { version = "0.6" }
regex = "1"
log = { version = "0.4" }
owo-colors = { version = "4.1" }
petgraph = { version = "0.6" }
rand = "0.8.5"
thiserror = { version = "2.0" }

[build-dependencies]
chrono = "0.4.39"

[workspace.lints.rust]
arithmetic_overflow = "warn"
missing_debug_implementations = "warn"
unexpected_cfgs = "allow"

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
cast_lossless = "warn"
cast_possible_wrap = "warn"
useless_conversion = "warn"
wrong_self_convention = "warn"
missing_assert_message = "warn"
unwrap_used = "warn"
missing_panics_doc = "warn"
missing_safety_doc = "warn"
alloc_instead_of_core = "warn"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
error_impl_error = "warn"
new_without_default = "allow"
module_name_repetitions = "allow"
missing_errors_doc = "allow"

[workspace.lints.rustdoc]
all = "warn"
broken_intra_doc_links = "warn"
missing_crate_level_docs = "warn"

[profile.release]
# This tool does not do heavy computations so `opt-level` is kind of irrelevant.
# Might as well optimize for size.
opt-level = "s"

# This is a release build, we don't need symbols.
strip = "symbols" 

# Fat LTO seems to also reduce binary size. Yes, it requires substantially more
# time to build. For this reason we provide the `release-no-lto` profile.
lto = "fat"

# We don't make use of unwinds anywhere and unwind code is a large part of the
# final binary, so...
panic = "abort"

[profile.release-no-lto]
inherits = "release"

# Thin LTO is the default and doesn't take that much time to build.
lto = "thin"
